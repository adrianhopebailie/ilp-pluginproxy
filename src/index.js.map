{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,+BAA8B;AAE9B,mDAA8F;AAG9F,MAAM,KAAK,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAA;AAEtC,IAAU,YAAY,CAQrB;AARD,WAAU,YAAY;IACP,0BAAa,GAAG,CAAC,CAAA;IACjB,uBAAU,GAAG,CAAC,CAAA;IACd,yBAAY,GAAG,CAAC,CAAA;IAChB,0BAAa,GAAG,CAAC,CAAA;IACjB,0CAA6B,GAAG,CAAC,CAAA;IACjC,iCAAoB,GAAG,CAAC,CAAA;IACxB,kCAAqB,GAAG,CAAC,CAAA;AACxC,CAAC,EARS,YAAY,KAAZ,YAAY,QAQrB;AAED;IAOE,YAAa,MAAgB,EAAE,MAAgB;QAC7C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;IACvB,CAAC;IAEK,OAAO;;YAEX,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAO,IAAY,EAAmB,EAAE;gBACvE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACpC,CAAC,CAAA,CAAC,CAAA;YACF,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAO,MAAc,EAAiB,EAAE;gBACxE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACvC,CAAC,CAAA,CAAC,CAAA;YAEF,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;YAE5B,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAO,IAAY,EAAmB,EAAE;gBACvE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACpC,CAAC,CAAA,CAAC,CAAA;YACF,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAO,MAAc,EAAiB,EAAE;gBACxE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACvC,CAAC,CAAA,CAAC,CAAA;YAEF,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;QAC9B,CAAC;KAAA;IAED,UAAU;QACR,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAA;QACjC,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAA;QACjC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;SAC1B,CAAC,CAAA;IACJ,CAAC;CAEF;AA1CD,kCA0CC;AAED,kBAAmB,SAAQ,kCAAiB;IAE1C,YAAa,OAAuC;QAClD,KAAK,CAAC,OAAO,CAAC,CAAA;QAGhB,cAAS,GAAiB,CAAO,MAAc,EAAE,EAAE;YACjD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACpC,IAAI,EAAE,YAAY,CAAC,aAAa;gBAChC,SAAS,EAAE,MAAM,IAAI,CAAC,UAAU,EAAE;gBAClC,IAAI,EAAE;oBACJ,MAAM;oBACN,YAAY,EAAE,EAAE;iBACjB;aACF,CAAC,CAAA;YAEF,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC9C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACtC,CAAC;YAED,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;QAC1B,CAAC,CAAA,CAAA;IAjBD,CAAC;IAmBK,YAAY,CAAE,IAAY,EAAE,MAAiB;;YAEjD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACxB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;YAChD,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAO,CAAC,CAAA;QAChD,CAAC;KAAA;CACF;AAED,8BAA4C,MAAc,EAAE,MAAgB;;QAC1E,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,EAAE,MAAM,EAAE,CAAC,CAAA;QAC9C,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;QAChD,MAAM,KAAK,CAAC,OAAO,EAAE,CAAA;QACrB,MAAM,CAAC,KAAK,CAAA;IACd,CAAC;CAAA;AALD,oDAKC;AAED,8BAA4C,IAAY,EAAE,MAAc,EAAE,MAAgB;;QACxF,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;QAClE,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;QAChD,MAAM,KAAK,CAAC,OAAO,EAAE,CAAA;QACrB,MAAM,CAAC,KAAK,CAAA;IACd,CAAC;CAAA;AALD,oDAKC","sourcesContent":["import * as Debug from 'debug'\nimport { PluginV2, MoneyHandler } from 'ilp-compat-plugin'\nimport { AbstractBtpPlugin, IlpPluginBtpConstructorOptions, BtpPacket } from 'ilp-plugin-btp';\n\n// const IlpPluginBtp: PluginV2 = AbstractBtpPlugin as any\nconst debug = Debug('ilp-pluginproxy')\n\nnamespace BtpConstants {\n  export const TYPE_RESPONSE = 1\n  export const TYPE_ERROR = 2\n  export const TYPE_MESSAGE = 6\n  export const TYPE_TRANSFER = 7\n  export const MIME_APPLICATION_OCTET_STREAM = 0\n  export const MIME_TEXT_PLAIN_UTF8 = 1\n  export const MIME_APPLICATION_JSON = 2\n}\n\nexport class PluginProxy {\n\n  // Constructor\n  private _plugin: PluginV2\n  private _bridge: PluginV2\n\n  // Cconnect\n  constructor (plugin: PluginV2, bridge: PluginV2) {\n    this._plugin = plugin\n    this._bridge = bridge\n  }\n\n  async connect (): Promise<void> {\n\n    this._plugin.registerDataHandler(async (data: Buffer): Promise<Buffer> => {\n      return this._bridge.sendData(data)\n    })\n    this._plugin.registerMoneyHandler(async (amount: string): Promise<void> => {\n      return this._bridge.sendMoney(amount)\n    })\n\n    await this._plugin.connect()\n\n    this._bridge.registerDataHandler(async (data: Buffer): Promise<Buffer> => {\n      return this._plugin.sendData(data)\n    })\n    this._bridge.registerMoneyHandler(async (amount: string): Promise<void> => {\n      return this._plugin.sendMoney(amount)\n    })\n\n    await this._bridge.connect()\n  }\n\n  disconnect () {\n    this._plugin.removeAllListeners()\n    this._bridge.removeAllListeners()\n    return Promise.all([\n      this._plugin.disconnect(),\n      this._bridge.disconnect()\n    ])\n  }\n\n}\n\nclass IlpPluginBtp extends AbstractBtpPlugin {\n\n  constructor (options: IlpPluginBtpConstructorOptions) {\n    super(options)\n  }\n\n  sendMoney: MoneyHandler = async (amount: string) => {\n    const response = await this._call('', {\n      type: BtpConstants.TYPE_TRANSFER,\n      requestId: await this._requestId(),\n      data: {\n        amount,\n        protocolData: []\n      }\n    })\n\n    if (response.type === BtpConstants.TYPE_ERROR) {\n      return Promise.reject(response.data)\n    }\n\n    return Promise.resolve()\n  }\n\n  async _handleMoney (from: string, packet: BtpPacket) {\n\n    if (!this._moneyHandler) {\n      throw new Error('no money handler registered')\n    }\n    return this._moneyHandler(packet.data.amount!)\n  }\n}\n\nexport async function createBtpClientProxy (server: string, plugin: PluginV2): Promise<PluginProxy> {\n  const btpClient = new IlpPluginBtp({ server })\n  const proxy = new PluginProxy(plugin, btpClient)\n  await proxy.connect()\n  return proxy\n}\n\nexport async function createBtpServerProxy (port: number, secret: string, plugin: PluginV2): Promise<PluginProxy> {\n  const btpClient = new IlpPluginBtp({ listener: { port, secret } })\n  const proxy = new PluginProxy(plugin, btpClient)\n  await proxy.connect()\n  return proxy\n}\n"]}